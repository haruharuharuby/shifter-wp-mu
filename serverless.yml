service: docker-swarm-controller

provider:
  name: aws
  runtime: python3.6
  stage: development
  region: us-east-1
  deploymentBucket: serverless.${self:provider.region}.shifter.deploys
  memorySize: 256
  timeout: 60
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "kms:Decrypt"
        - "kms:Encrypt"
      Resource:
        - "arn:aws:kms:us-east-1:027273742350:key/297bae1b-9d39-4208-9adf-cbe0fce6fb9b"
    - Effect: "Allow"
      Action:
        - "ecr:GetAuthorizationToken"
        - "s3:Get*"
        - "s3:List*"
      Resource:
        - "*"
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:PutObjectAcl"
      Resource:
        - "arn:aws:s3:::sys.status.getshifter/*"
        - "arn:aws:s3:::sawatest-lambda-permission/*"

    - Effect: "Allow"
      Action:
        - "dynamodb:DeleteItem"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:Scan"
        - "dynamodb:Query"
        - "dynamodb:UpdateItem"
      Resource:
        - "arn:aws:dynamodb:us-east-1:027273742350:table/Site"
        - "arn:aws:dynamodb:us-east-1:027273742350:table/Archive"
        - "arn:aws:dynamodb:us-east-1:027273742350:table/UserDatabase2"
        - "arn:aws:dynamodb:us-east-1:027273742350:table/UserDatabase2-dev"

package:
  include:
    - lambda_function.py
    - vendored
    - mylibs
  exclude:
    - \.*
    - \.vscode/**
    - \.ipynb_checkpoints/**
    - venv/**
    - localvendored/**
    - test/**
    - "*.md"
    - notebook/**
    - examples/**
    - node_modules/**
    - tmp/**
    - tools/**
    - "*.ipynb"

custom:
  rollbar_token: 458e204f3c6b4b2caf4fa449d3a81077

functions:
  main:
    handler: lambda_function.lambda_handler
    description: "Docker Swarm API Wrapper. - @sawa, @hide"
    environment:
      SHIFTER_ENV: ${opt:stage, self:provider.stage}
      ROLLBAR_TOKEN: ${self:custom.rollbar_token}
